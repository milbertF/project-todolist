@import url("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css");

*:not(dialog) {
  margin: 0;
  padding: 0;
}
body {
  background-color: rgb(20, 20, 20);
  font-family: sans-serif;
}
.whole {
  min-height: 100vh;
  display: flex;
  justify-content: center;
}
.by {
  position: absolute;
  right: 0;
  bottom: 2rem;
  height: 3rem;
  width: 0.8rem;
  background-color: rgba(255, 255, 255, 0.2);
  border-top-left-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: white;
  overflow: hidden;
  interpolate-size: allow-keywords;
  transition: all 0.5s ease;
  transition-delay: 0.3s;
  opacity: 0;
  animation: by 0.5s ease forwards;
  animation-delay: 3s;
}
@keyframes by {
  to {
    opacity: 1;
  }
}
.lineby {
  position: relative;
  background-color: #2c2c2c;
  width: 1rem;
  border-right: white solid 0.1rem;
  height: 100%;
  position: relative;
  z-index: 1;
  flex-shrink: 0;
  box-sizing: border-box;
  max-width: 100%;
  transition: all 0.5s ease;
}
.by > div:nth-child(3) {
  transform: translateX(-120%);
  transition: all 1s ease;
  transition-delay: 0.3s;
  opacity: 0;
}
.by p {
  font-size: 0.8rem;
  white-space: nowrap;
  font-weight: bold;
}
.by:hover {
  width: auto;
  padding-right: 1rem;
  box-shadow: inset rgba(255, 255, 255, 0.3) -0.3rem 0.1rem 0.3rem,
    inset rgba(255, 255, 255, 0.3) 0.3rem -0.1rem 0.3rem;
}
.by:hover .lineby {
  height: 70%;
  box-shadow: inset black -0.2rem 0rem 0.5rem;
}
.by:hover div:nth-child(3) {
  transform: translateX(0%);
  opacity: 1;
}
.lightby {
  position: absolute;
  background: rgb(255, 255, 0);
  background: linear-gradient(
    -135deg,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 70%
  );
  height: 8rem;
  width: 8rem;
  z-index: -1;
  rotate: 34deg;
  left: 0.2rem;
  top: 20%;
  transform: translateY(-50%) skew(-20deg);
}
/* div {
  border: red solid 1px;
} */
.container {
  width: 50rem;
  max-width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 2rem 1rem;
  box-sizing: border-box;
}

.title {
  width: 30rem;
  max-width: 100%;
  height: 6rem;
  display: flex;
  align-items: center;
  justify-content: center;
}
.title > svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
  animation: svg 2s ease forwards;
  animation-delay: 2s;
  max-width: 80%;
}
@keyframes svg {
  to {
    top: 1rem;
    transform: translate(-50%, 0);
    width: 30rem;
    max-width: 80%;
  }
}
.title > svg path {
  fill: transparent;
  stroke: white;
  stroke-width: 3;
  stroke-dasharray: 610;
  stroke-dashoffset: 610;
  animation: path 4s ease forwards;
}
@keyframes path {
  0% {
    stroke-dashoffset: 610;
    fill: transparent;
  }
  50% {
    fill: transparent;
  }
  100% {
    stroke-dashoffset: 0;
    fill: white;
  }
}

.addCon button {
  min-width: 3rem;
  padding-inline: 2rem;
  font-weight: bolder;
  font-size: 1.3rem;
  border-radius: 0.5rem;
  cursor: pointer;
  background-color: rgb(0, 90, 0);
  border: white solid 2px;
  color: white;
  transition: background-color 0.3s ease;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}
.addCon button:hover {
  background-color: green;
}

.cardCon {
  position: relative;
  width: 100%;
  height: 0;
  flex-grow: 0;
  border-radius: 1rem;
  display: flex;
  flex-direction: column;
  padding: 1rem;
  box-sizing: border-box;
  background-color: rgb(30, 30, 30);
  animation: cardCon 3s ease forwards;
  animation-delay: 3s;
  opacity: 0;
  gap: 1rem;
  overflow: auto;
  isolation: isolate;
  overflow-y: scroll;
}
@keyframes cardCon {
  to {
    flex-grow: 1;
    opacity: 1;
  }
}

.empty {
  position: absolute;
  width: 20rem;
  max-width: 90%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 5;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.empty img {
  user-select: none;
  pointer-events: none;
}
.empty p {
  color: white;
  font-size: 1.3rem;
  font-weight: bold;
  padding: 1rem;
  text-align: center;
  text-wrap: balance;
}
.scdn-cvd {
  width: calc(100% - 2rem);
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  height: 5rem;
}
@keyframes scdn-cvd {
  to {
    opacity: 1;
  }
}
.filterCon {
  height: 100%;
  width: fit-content;
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;
  gap: 1rem;
}
.filters {
  position: relative;
  min-width: 7rem;
  height: 3rem;
  border-top-left-radius: calc(0.5rem - 0.1rem);
  border-top-right-radius: calc(0.5rem - 0.1rem);
  padding: 0.3rem 1rem;
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  gap: 0.5rem;
  color: white;
  border-top: transparent 1px solid;
  border-left: transparent 1px solid;
  border-right: transparent 1px solid;
  transition: all 1s ease;
  animation: filters 0.1s ease forwards;
  animation-delay: 3s;
  pointer-events: none;
}
@keyframes filters {
  to {
    pointer-events: all;
  }
}
.filters:hover {
  border-top: white 1px solid;
  border-left: white 1px solid;
  border-right: white 1px solid;
}
.filters:after {
  position: absolute;
  content: "";
  width: 100%;
  bottom: 0;
  left: 0;
  z-index: -1;
  background-color: rgba(255, 255, 255, 0.1);
  border-top-left-radius: calc(0.5rem - 0.1rem);
  border-top-right-radius: calc(0.5rem - 0.1rem);
  height: 0;
  transition: all 0.5s ease;
}
.filters:hover:after {
  color: white;
  height: 100%;
}
.leftf {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  animation: scdn-cvd 0.5s ease forwards;
  animation-delay: 3s;
  opacity: 0;
}
.filters span {
  font-size: 0.8rem;
  opacity: 0.8;
}
.filters p {
  font-weight: bolder;
}
.chevr {
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.5s ease;
  opacity: 0;
  animation: scdn-cvd 0.5s ease forwards;
  animation-delay: 3s;
}
.filters:hover .chevr {
  rotate: 180deg;
}

.filterPriorityBtnCon {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  background-color: #2c2c2c;
  z-index: 999;
  width: calc(100% + 2px);
  border-bottom-left-radius: calc(0.5rem - 0.1rem);
  border-bottom-right-radius: calc(0.5rem - 0.1rem);
  border-bottom: transparent 1px solid;
  border-left: transparent 1px solid;
  border-right: transparent 1px solid;
  transition: height 0.5s ease, border 0.5s ease, opacity 1s ease;
  box-sizing: border-box;
  opacity: 0;
  height: 0;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  interpolate-size: allow-keywords;
}
.filters:hover .filterPriorityBtnCon {
  border-bottom: white 1px solid;
  border-left: white 1px solid;
  border-right: white 1px solid;
  height: auto;
  opacity: 1;
  box-sizing: border-box;
}
.filPri {
  padding: 0.3rem 1rem;
  box-sizing: border-box;
  transition: all 0.3s ease;
  cursor: pointer;
}
.filPri:hover {
  background-color: rgba(255, 255, 255, 0.1);
  padding-left: 1.5rem;
}
.fillPri p {
  font-size: 1rem;
  white-space: nowrap;
}
.filters:hover .filterPriorityBtnCon .fillPri:nth-child(2) {
  animation: filPri2 0.5s ease forwards;
}

/* div {
  border: red solid 1px;
} */
.rdBtnCon {
  height: 0;
  width: fit-content;
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
  overflow: hidden;
  gap: 0.1rem;
  border-top: white 1px solid;
  border-left: white 1px solid;
  border-right: white 1px solid;
  padding-top: 0.1rem;
  padding-left: 0.1rem;
  padding-right: 0.1rem;
  animation: rdBtnCon 0.5s ease-in forwards;
  animation-delay: 4s;
  opacity: 0;
}
@keyframes rdBtnCon {
  to {
    height: 2rem;
    opacity: 1;
  }
}

.rdBtnCon button {
  height: 0;
  width: 3rem;
  border: none;
  cursor: pointer;
  opacity: 0;
}
.rdBtnCon button i {
  transition: scale 0.3s ease;
}
.rdBtnCon button:hover i {
  scale: 1.5;
}
.rdBtnCon button:nth-child(1) {
  background-color: green;
  border-top-left-radius: calc(0.5rem - 0.1rem);
  border-top-right-radius: calc(0.5rem - 0.1rem);
  animation: button1 1s ease forwards;
  animation-delay: 4.2s;
}
@keyframes button1 {
  to {
    height: 100%;
    opacity: 1;
  }
}
.cardHead {
  height: 2rem;
  background-color: rgba(255, 255, 255, 0.2);
  display: flex;
  color: white;
  justify-content: flex-end;
  padding: 1rem;
  box-sizing: border-box;
  position: sticky;
  top: -1rem;
  backdrop-filter: blur(2rem);
  z-index: 2;
}
.cardHead > * {
  display: flex;
  align-items: center;
}
.cards {
  height: 5rem;
  background-color: rgba(255, 255, 255, 0.05);
  display: flex;
  color: white;
  padding: 1rem;
  box-sizing: border-box;
  flex-shrink: 0;
  position: relative;
  z-index: 1;
  transition: all 0.5s ease;
}
.cards > * {
  display: flex;
  align-items: center;
}
.nameDate {
  width: 40%;
  flex-direction: column;
  align-items: flex-start;
  justify-content: space-between;
  overflow: hidden;
}
.nameDate h3 {
  font-size: 1.3rem;
  white-space: nowrap;
  max-width: 90%;
  overflow: hidden;
  text-overflow: ellipsis;
}
.nameDate time {
  font-size: 0.8rem;
  opacity: 0.5;
  z-index: -1;
}
.priority,
.priorityHead {
  width: 20%;
}
.priority p {
  padding: 0.3rem 0.5rem;
  border-radius: 0.5rem;
}
.high {
  background-color: rgba(255, 0, 0, 0.3);
}
.medium {
  background-color: rgba(255, 166, 0, 0.3);
}
.low {
  background-color: rgba(255, 255, 0, 0.3);
}
.Category,
.CategoryHead {
  width: 20%;
}
.tools,
.toolsHead {
  width: 20%;
}
.tools {
  display: flex;
  gap: 0.5rem;
}
.tools i {
  padding: 0.5rem;
  width: 0.8rem;
  aspect-ratio: 1/1;
  font-size: 0.8rem;
  background-color: rgb(53, 53, 53);
  color: rgb(202, 202, 202);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
}
.tools i:hover {
  scale: 1.1;
  background-color: rgb(65, 65, 65);
  color: rgb(255, 255, 255);
}
.checkBox {
  box-sizing: border-box;
  display: block;
  cursor: pointer;
  width: 1.5rem;
  aspect-ratio: 1/1;
  border: 2px solid rgba(255, 255, 255, 0);
  border-radius: 0.5em;
  position: relative;
  overflow: hidden;
  box-shadow: 0px 0px 0px 1.5px #fff;
  margin-left: auto;
}

.checkBox div {
  width: 60px;
  height: 60px;
  background-color: #fff;
  top: -52px;
  left: -52px;
  position: absolute;
  transform: rotateZ(45deg);
  z-index: 100;
}

.checkBox input[type="checkbox"]:checked + div {
  left: -10px;
  top: -10px;
}

.checkBox input[type="checkbox"] {
  position: absolute;
  left: 50px;
  visibility: hidden;
}

.transition {
  transition: 1s ease;
}

::-webkit-scrollbar {
  width: 0.2rem;
  height: 0.2rem;
}
::-webkit-scrollbar-track {
  background-color: aliceblue;
}
::-webkit-scrollbar-thumb {
  background-color: red;
}

.wrapCon {
  border-radius: 1rem;
  overflow: hidden;
  width: 100%;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  border: white solid 1px;
  animation: wrapCon 2s ease forwards;
  animation-delay: 3s;
  opacity: 0;
}
@keyframes wrapCon {
  to {
    opacity: 1;
  }
}

dialog {
  width: 100vw;
  height: 100vh;
  z-index: 9999;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  background-color: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(2rem);
  color: white;
  border: none;
  overflow: auto;
}
@keyframes dialog {
  to {
    scale: 1;
    filter: blur(0rem);
  }
}
.modalCon {
  width: 20rem;
  margin-block: 2rem;
  padding: 1rem;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  position: relative;
  border-radius: 0.5rem;
  border: white solid 1px;
  background-color: #292929;
  animation: dialog 0.5s ease forwards;
  scale: 1.2;
  filter: blur(1rem);
}
.modalCon form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.modalCon span {
  position: absolute;
  top: 0;
  right: 0;
  margin: 1rem;
  height: 1.5rem;
  aspect-ratio: 1/1;
  background-color: rgba(90, 0, 0);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.8rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
.modalCon span:hover {
  background-color: red;
}
.part {
  display: flex;
  flex-direction: column;
}
.part label {
  font-size: 0.9rem;
}
.inputPart {
  height: 2.5rem;
  display: flex;
}
.inputPart input,
.inputPart select {
  width: 100%;
  border-radius: 0.3rem;
  padding-inline: 0.5rem;
}
.partWrap {
  display: flex;
  gap: 1.9rem;
}
.partWrap .part {
  width: 50%;
}
.modalCon button {
  height: 2.5rem;
  margin-top: 0.9rem;
  margin-bottom: 2rem;
  border-radius: 0.3rem;
  cursor: pointer;
  background-color: rgb(0, 90, 0);
  color: white;
  font-weight: bolder;
  font-size: 1.3rem;
  border: white solid 2px;
  color: white;
  transition: background-color 0.3s ease;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}
.modalCon button:hover {
  background-color: green;
}

.taskDone {
  text-decoration: line-through;
  color: green;
}
.cardDone {
  background-color: rgba(0, 128, 0, 0.03);
}
/* div {
  border: red solid 1px;
} */

.containerCheckbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.containerCheckbox {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 1.5rem;
  user-select: none;
  margin-left: auto;
}

/* Create a custom checkbox */
.checkmark {
  --clr: #0b6e4f;
  position: relative;
  top: 0;
  left: 0;
  height: 1.3em;
  width: 1.3em;
  background-color: #ccc;
  border-radius: 50%;
  transition: 300ms;
}

/* When the checkbox is checked, add a blue background */
.containerCheckbox input:checked ~ .checkmark {
  background-color: var(--clr);
  border-radius: 0.5rem;
  animation: pulse 500ms ease-in-out;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.containerCheckbox input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.containerCheckbox .checkmark:after {
  left: 0.45em;
  top: 0.25em;
  width: 0.25em;
  height: 0.5em;
  border: solid #e0e0e2;
  border-width: 0 0.15em 0.15em 0;
  transform: rotate(45deg);
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 #0b6e4f90;
    rotate: 20deg;
  }

  50% {
    rotate: -20deg;
  }

  75% {
    box-shadow: 0 0 0 10px #0b6e4f60;
  }

  100% {
    box-shadow: 0 0 0 13px #0b6e4f30;
    rotate: 0;
  }
}

/* div {
  border: red solid 1px;
  box-sizing: border-box;
} */
@media (max-width: 1200px) {
  .by {
    opacity: 0;
    visibility: hidden;
  }
  .cardHead {
    min-width: 35rem;
  }
  .cards {
    min-width: 35rem;
  }
}
